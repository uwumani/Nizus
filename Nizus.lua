local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\97\104","\109\79\70\149\84\70\96"),function(v42) if (v9(v42,2)==79) then v30=v8(v11(v42,1,2 -1 ));return "";else local v99=v10(v8(v42,16));if v30 then local v111=v13(v99,v30);v30=nil;return v111;else return v99;end end end);local function v31(v43,v44,v45) if v45 then local v100=0;local v101;while true do if (v100==0) then v101=(v43/(2^(v44-1)))%(2^(((v45-(3 -2)) -(v44-(1 + 0))) + 1 + 0)) ;return v101-(v101%1) ;end end else local v102=0;local v103;while true do if (v102==0) then v103=2^(v44-1) ;return (((v43%(v103 + v103))>=v103) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + (1056 -(87 + 968)) ;return v46;end local function v33() local v47,v48=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;return (v48 * 256) + v47 ;end local function v34() local v49,v50,v51,v52=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;return (v52 * (73852352 -57075136)) + (v51 * 65536) + (v50 * 256) + v49 ;end local function v35() local v53=0;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==0) then v54=v34();v55=v34();v53=1;end if (v53==3) then if (v58==0) then if (v57==0) then return v59 * (0 -0) ;else v58=1;v56=0;end elseif (v58==2047) then return ((v57==0) and (v59 * (1/0))) or (v59 * NaN) ;end return v16(v59,v58-1023 ) * (v56 + (v57/(2^(99 -47)))) ;end if (v53==1) then v56=1;v57=(v31(v55,1,19 + 1 ) * (2^(91 -59))) + v54 ;v53=2;end if (v53==2) then v58=v31(v55,21,31);v59=((v31(v55,32)==1) and  -1) or 1 ;v53=3;end end end local function v36(v60) local v61=0;local v62;local v63;while true do if (v61==3) then return v14(v63);end if (v61==1) then v62=v11(v27,v29,(v29 + v60) -1 );v29=v29 + v60 ;v61=2;end if (0==v61) then v62=nil;if  not v60 then v60=v34();if (v60==0) then return "";end end v61=1;end if (v61==2) then v63={};for v112=1, #v62 do v63[v112]=v10(v9(v11(v62,v112,v112)));end v61=3;end end end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v64={};local v65={};local v66={};local v67={v64,v65,nil,v66};local v68=v34();local v69={};for v77=1414 -(447 + 966) ,v68 do local v78=0;local v79;local v80;while true do if (v78==0) then v79=v32();v80=nil;v78=1;end if (v78==1) then if (v79==1) then v80=v32()~=0 ;elseif (v79==(4 -2)) then v80=v35();elseif (v79==3) then v80=v36();end v69[v77]=v80;break;end end end v67[3]=v32();for v81=1,v34() do local v82=v32();if (v31(v82,1,1)==0) then local v107=v31(v82,2,3);local v108=v31(v82,4,1823 -(1703 + 114) );local v109={v33(),v33(),nil,nil};if (v107==0) then local v119=0;while true do if (0==v119) then v109[3]=v33();v109[4]=v33();break;end end elseif (v107==(620 -(555 + 64))) then v109[934 -(857 + 74) ]=v34();elseif (v107==2) then v109[571 -(367 + 201) ]=v34() -((2 -0)^(48 -32)) ;elseif (v107==3) then v109[3]=v34() -(2^16) ;v109[2 + 2 ]=v33();end if (v31(v108,1,1)==1) then v109[2]=v69[v109[2]];end if (v31(v108,2,2)==1) then v109[3]=v69[v109[3]];end if (v31(v108,6 -3 ,3)==1) then v109[4]=v69[v109[931 -(214 + 713) ]];end v64[v81]=v109;end end for v83=1,v34() do v65[v83-(1 + 0) ]=v39();end return v67;end local function v40(v71,v72,v73) local v74=v71[1];local v75=v71[2];local v76=v71[3];return function(...) local v85=v74;local v86=v75;local v87=v76;local v88=v38;local v89=15 -(9 + 5) ;local v90= -(1 + 0);local v91={};local v92={...};local v93=v20("#",...) -1 ;local v94={};local v95={};for v104=877 -(282 + 595) ,v93 do if (v104>=v87) then v91[v104-v87 ]=v92[v104 + 1 ];else v95[v104]=v92[v104 + (377 -(85 + 291)) ];end end local v96=(v93-v87) + (1638 -(1523 + 114)) ;local v97;local v98;while true do v97=v85[v89];v98=v97[1 + 0 ];if (v98<=61) then if (v98<=30) then if (v98<=(19 -5)) then if (v98<=(1071 -(68 + 997))) then if (v98<=2) then if (v98<=(1265 -(243 + 1022))) then if (v95[v97[1272 -(226 + 1044) ]]<v97[4]) then v89=v97[3];else v89=v89 + 1 ;end elseif (v98>(3 -2)) then local v140=0;local v141;local v142;while true do if (v140==1) then for v460=v141 + 1 ,v90 do v15(v142,v95[v460]);end break;end if (v140==0) then v141=v97[2];v142=v95[v141];v140=1;end end else local v143=v97[2];local v144=v95[v143];local v145=v97[3];for v339=4 -3 ,v145 do v144[v339]=v95[v143 + v339 ];end end elseif (v98<=4) then if (v98>3) then v95[v97[2]]=v97[3];else local v148=0;local v149;while true do if (v148==0) then v149=v97[2];do return v95[v149](v21(v95,v149 + 1 ,v97[3]));end break;end end end elseif (v98>5) then local v150=0;local v151;while true do if (0==v150) then v151=v97[2];do return v95[v151](v21(v95,v151 + (118 -(32 + 85)) ,v97[3]));end break;end end else local v152=v97[2];local v153={};for v342=1, #v94 do local v343=0;local v344;while true do if (v343==0) then v344=v94[v342];for v506=0, #v344 do local v507=0;local v508;local v509;local v510;while true do if (v507==0) then v508=v344[v506];v509=v508[1];v507=1;end if (v507==1) then v510=v508[2];if ((v509==v95) and (v510>=v152)) then v153[v510]=v509[v510];v508[1 + 0 ]=v153;end break;end end end break;end end end end elseif (v98<=10) then if (v98<=8) then if (v98>7) then local v154=v97[2];v95[v154]=v95[v154]();else v95[v97[2]]=v95[v97[1183 -(1123 + 57) ]] + v95[v97[4]] ;end elseif (v98>9) then if (v97[2 + 0 ]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3 + 0 ];end else local v157=v97[2];v95[v157](v95[v157 + (1931 -(1869 + 61)) ]);end elseif (v98<=12) then if (v98>11) then local v158=0;local v159;while true do if (v158==0) then v159=v97[2];v95[v159]=v95[v159](v95[v159 + 1 ]);break;end end else local v160=v97[2];v95[v160]=v95[v160](v95[v160 + 1 ]);end elseif (v98==13) then local v162=v97[2];do return v21(v95,v162,v90);end else v95[v97[2]][v95[v97[3]]]=v95[v97[4]];end elseif (v98<=22) then if (v98<=18) then if (v98<=16) then if (v98==15) then v95[v97[1 + 1 ]]=v97[3]~=0 ;v89=v89 + 1 ;else local v166=0;local v167;local v168;local v169;while true do if (v166==0) then v167=v97[1 + 1 ];v168={v95[v167](v21(v95,v167 + (3 -2) ,v90))};v166=1;end if (v166==1) then v169=0;for v462=v167,v97[4] do local v463=0;while true do if (v463==0) then v169=v169 + (1 -0) ;v95[v462]=v168[v169];break;end end end break;end end end elseif (v98==17) then v72[v97[960 -(892 + 65) ]]=v95[v97[1 + 1 ]];elseif (v95[v97[2]]<v97[9 -5 ]) then v89=v97[3];else v89=v89 + 1 ;end elseif (v98<=20) then if (v98>(25 -6)) then local v172=0;local v173;local v174;local v175;while true do if (1==v172) then v175=0;for v464=v173,v97[4] do local v465=0;while true do if (v465==0) then v175=v175 + 1 ;v95[v464]=v174[v175];break;end end end break;end if (v172==0) then v173=v97[3 -1 ];v174={v95[v173](v95[v173 + 1 ])};v172=1;end end else v95[v97[2]]=v73[v97[4 -1 ]];end elseif (v98==21) then v95[v97[2]]=v72[v97[353 -(87 + 263) ]];elseif (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3 + 0 ];end elseif (v98<=(206 -(67 + 113))) then if (v98<=24) then if (v98>23) then local v180=v97[1476 -(1329 + 145) ];local v181=v97[975 -(140 + 831) ];local v182=v180 + 2 ;local v183={v95[v180](v95[v180 + 1 ],v95[v182])};for v345=1,v181 do v95[v182 + v345 ]=v183[v345];end local v184=v183[1851 -(1409 + 441) ];if v184 then v95[v182]=v184;v89=v97[3];else v89=v89 + 1 ;end else local v185=0;local v186;local v187;local v188;while true do if (v185==0) then v186=v86[v97[3]];v187=nil;v185=1;end if (v185==2) then for v466=1,v97[4] do local v467=0;local v468;while true do if (v467==0) then v89=v89 + 1 ;v468=v85[v89];v467=1;end if (v467==1) then if (v468[1]==106) then v188[v466-1 ]={v95,v468[3]};else v188[v466-1 ]={v72,v468[3]};end v94[ #v94 + 1 ]=v188;break;end end end v95[v97[2]]=v40(v186,v187,v73);break;end if (1==v185) then v188={};v187=v18({},{[v7("\210\7\15\3\191\196\66","\58\141\88\102\109\219\161")]=function(v469,v470) local v471=0;local v472;while true do if (v471==0) then v472=v188[v470];return v472[1][v472[2]];end end end,[v7("\245\79\20\56\66\64\38\87\207\104","\51\170\16\122\93\53\41\72")]=function(v473,v474,v475) local v476=0;local v477;while true do if (v476==0) then v477=v188[v474];v477[1][v477[2]]=v475;break;end end end});v185=2;end end end elseif (v98==25) then local v189=v97[2];local v190={v95[v189](v95[v189 + 1 ])};local v191=0;for v348=v189,v97[4] do v191=v191 + 1 + 0 ;v95[v348]=v190[v191];end else v95[v97[1 + 1 ]]=v95[v97[3]] -v95[v97[15 -11 ]] ;end elseif (v98<=(1749 -(345 + 1376))) then if (v98==27) then v95[v97[2]]=v97[691 -(198 + 490) ]~=(0 -0) ;else v95[v97[954 -(802 + 150) ]]= #v95[v97[6 -3 ]];end elseif (v98==29) then local v195=0;local v196;local v197;local v198;local v199;while true do if (1==v195) then v90=(v198 + v196) -(1 + 0) ;v199=0;v195=2;end if (v195==0) then v196=v97[5 -3 ];v197,v198=v88(v95[v196](v21(v95,v196 + (1207 -(696 + 510)) ,v97[5 -2 ])));v195=1;end if (2==v195) then for v478=v196,v90 do local v479=0;while true do if (v479==0) then v199=v199 + 1 ;v95[v478]=v197[v199];break;end end end break;end end else v95[v97[2]]=v95[v97[3]]%v95[v97[4]] ;end elseif (v98<=45) then if (v98<=(1034 -(915 + 82))) then if (v98<=33) then if (v98<=31) then local v132=0;local v133;local v134;while true do if (v132==0) then v133=v97[2];v134=v95[v97[3]];v132=1;end if (v132==1) then v95[v133 + 1 ]=v134;v95[v133]=v134[v97[11 -7 ]];break;end end elseif (v98==32) then local v201=0;local v202;while true do if (v201==0) then v202=v97[2];v95[v202]=v95[v202]();break;end end else local v203=v97[2 + 0 ];local v204={v95[v203](v21(v95,v203 + (1188 -(1069 + 118)) ,v90))};local v205=0;for v356=v203,v97[4] do local v357=0;while true do if (v357==0) then v205=v205 + 1 ;v95[v356]=v204[v205];break;end end end end elseif (v98<=35) then if (v98>(76 -42)) then v95[v97[2]]=v95[v97[6 -3 ]] + v95[v97[4]] ;else v95[v97[2]]=v95[v97[9 -6 ]][v97[4]];end elseif (v98==36) then local v209=0;local v210;while true do if (0==v209) then v210=v97[2];v95[v210]=v95[v210](v21(v95,v210 + 1 ,v97[3]));break;end end else v95[v97[2]]=v95[v97[3]] + v97[4] ;end elseif (v98<=41) then if (v98<=(7 + 32)) then if (v98==38) then local v212=0;local v213;local v214;while true do if (v212==0) then v213=v97[2];v214=v95[v213];v212=1;end if (v212==1) then for v482=v213 + 1 ,v97[3] do v15(v214,v95[v482]);end break;end end else local v215=v97[2];local v216,v217=v88(v95[v215](v95[v215 + 1 ]));v90=(v217 + v215) -1 ;local v218=0;for v358=v215,v90 do v218=v218 + 1 ;v95[v358]=v216[v218];end end elseif (v98==40) then local v219=0;local v220;local v221;while true do if (v219==1) then v95[v220 + 1 ]=v221;v95[v220]=v221[v97[4]];break;end if (0==v219) then v220=v97[6 -4 ];v221=v95[v97[3]];v219=1;end end else local v222=0;local v223;while true do if (v222==0) then v223=v97[2];v95[v223](v21(v95,v223 + 1 ,v97[3]));break;end end end elseif (v98<=43) then if (v98>42) then do return;end else v95[v97[376 -(123 + 251) ]]=v95[v97[4 -1 ]]%v95[v97[4]] ;end elseif (v98>44) then v95[v97[2]][v95[v97[3]]]=v97[4];else local v227=0;local v228;local v229;local v230;local v231;while true do if (0==v227) then v228=v97[2];v229,v230=v88(v95[v228](v95[v228 + 1 + 0 ]));v227=1;end if (v227==2) then for v483=v228,v90 do v231=v231 + 1 ;v95[v483]=v229[v231];end break;end if (v227==1) then v90=(v230 + v228) -1 ;v231=791 -(368 + 423) ;v227=2;end end end elseif (v98<=(166 -113)) then if (v98<=49) then if (v98<=47) then if (v98>46) then if (v95[v97[9 -7 ]]~=v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[2]]();end elseif (v98==48) then v95[v97[2]]=v95[v97[3]]%v97[4] ;else local v233=v97[2];local v234={};for v361=1, #v94 do local v362=v94[v361];for v391=0, #v362 do local v392=v362[v391];local v393=v392[1];local v394=v392[20 -(10 + 8) ];if ((v393==v95) and (v394>=v233)) then v234[v394]=v393[v394];v392[1]=v234;end end end end elseif (v98<=51) then if (v98>50) then local v235=v95[v97[4]];if  not v235 then v89=v89 + 1 ;else local v395=0;while true do if (v395==0) then v95[v97[7 -5 ]]=v235;v89=v97[445 -(416 + 26) ];break;end end end else v95[v97[2]]=v97[9 -6 ] + v95[v97[4]] ;end elseif (v98>52) then v72[v97[2 + 1 ]]=v95[v97[2]];elseif (v95[v97[2]]==v97[4]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=57) then if (v98<=55) then if (v98==54) then v95[v97[2]]=v95[v97[4 -1 ]] * v97[4] ;else local v240=0;local v241;local v242;local v243;local v244;while true do if (v240==0) then v241=v97[2];v242,v243=v88(v95[v241](v21(v95,v241 + 1 ,v90)));v240=1;end if (v240==1) then v90=(v243 + v241) -1 ;v244=0;v240=2;end if (v240==2) then for v489=v241,v90 do local v490=0;while true do if (v490==0) then v244=v244 + 1 ;v95[v489]=v242[v244];break;end end end break;end end end elseif (v98>(494 -(145 + 293))) then local v245=0;local v246;local v247;local v248;local v249;while true do if (v245==1) then v90=(v248 + v246) -1 ;v249=698 -(208 + 490) ;v245=2;end if (v245==2) then for v491=v246,v90 do v249=v249 + (431 -(44 + 386)) ;v95[v491]=v247[v249];end break;end if (v245==0) then v246=v97[2];v247,v248=v88(v95[v246](v21(v95,v246 + 1 ,v97[3])));v245=1;end end else local v250=0;local v251;local v252;local v253;local v254;while true do if (v250==2) then for v494=v251,v90 do local v495=0;while true do if (v495==0) then v254=v254 + 1 ;v95[v494]=v252[v254];break;end end end break;end if (1==v250) then v90=(v253 + v251) -1 ;v254=0;v250=2;end if (v250==0) then v251=v97[2];v252,v253=v88(v95[v251](v21(v95,v251 + 1 ,v90)));v250=1;end end end elseif (v98<=(5 + 54)) then if (v98==58) then local v255=0;local v256;local v257;while true do if (1==v255) then for v496=v256 + 1 ,v90 do v15(v257,v95[v496]);end break;end if (0==v255) then v256=v97[2];v257=v95[v256];v255=1;end end elseif (v97[2]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==60) then v95[v97[2]]=v95[v97[3]];else local v260=0;local v261;local v262;local v263;while true do if (v260==1) then v263=v95[v261 + 2 ];if (v263>0) then if (v262>v95[v261 + (1487 -(998 + 488)) ]) then v89=v97[3];else v95[v261 + 1 + 2 ]=v262;end elseif (v262<v95[v261 + 1 ]) then v89=v97[3 + 0 ];else v95[v261 + 3 ]=v262;end break;end if (v260==0) then v261=v97[1 + 1 ];v262=v95[v261];v260=1;end end end elseif (v98<=92) then if (v98<=(10 + 66)) then if (v98<=68) then if (v98<=64) then if (v98<=62) then local v135=0;local v136;local v137;local v138;while true do if (v135==1) then v138=v97[3];for v398=1,v138 do v137[v398]=v95[v136 + v398 ];end break;end if (v135==0) then v136=v97[204 -(14 + 188) ];v137=v95[v136];v135=1;end end elseif (v98==63) then v95[v97[2]]=v95[v97[3]] + v97[4] ;else local v265=0;local v266;while true do if (v265==0) then v266=v97[774 -(201 + 571) ];v95[v266](v21(v95,v266 + 1 ,v90));break;end end end elseif (v98<=66) then if (v98>65) then do return v95[v97[2]]();end else local v267=0;local v268;local v269;local v270;while true do if (v267==2) then if (v269>0) then if (v270<=v95[v268 + 1 ]) then local v538=0;while true do if (v538==0) then v89=v97[3];v95[v268 + (1141 -(116 + 1022)) ]=v270;break;end end end elseif (v270>=v95[v268 + 1 ]) then local v539=0;while true do if (v539==0) then v89=v97[3];v95[v268 + (12 -9) ]=v270;break;end end end break;end if (v267==0) then v268=v97[2];v269=v95[v268 + 2 ];v267=1;end if (1==v267) then v270=v95[v268] + v269 ;v95[v268]=v270;v267=2;end end end elseif (v98==67) then if  not v95[v97[2]] then v89=v89 + 1 ;else v89=v97[2 + 1 ];end else v95[v97[7 -5 ]][v97[3]]=v95[v97[4]];end elseif (v98<=72) then if (v98<=(248 -178)) then if (v98>69) then v95[v97[861 -(814 + 45) ]]=v40(v86[v97[3]],nil,v73);else v95[v97[2]]={};end elseif (v98>71) then local v275=v97[4 -2 ];v95[v275](v95[v275 + 1 ]);else do return v95[v97[1 + 1 ]];end end elseif (v98<=74) then if (v98>73) then v95[v97[2]]();elseif v95[v97[2]] then v89=v89 + 1 + 0 ;else v89=v97[3];end elseif (v98==75) then v95[v97[2]]=v95[v97[3]]/v97[4] ;else do return v95[v97[2]]();end end elseif (v98<=84) then if (v98<=(168 -88)) then if (v98<=78) then if (v98==77) then v95[v97[2 -0 ]]=v97[3]~=(0 -0) ;else local v278=v97[2];v95[v278]=v95[v278](v21(v95,v278 + 1 ,v90));end elseif (v98>79) then if (v95[v97[1 + 1 ]]~=v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else local v280=0;local v281;while true do if (v280==0) then v281=v97[2];v95[v281]=v95[v281](v21(v95,v281 + 1 ,v97[3]));break;end end end elseif (v98<=82) then if (v98==81) then do return v95[v97[2]];end else local v282=v95[v97[4]];if  not v282 then v89=v89 + 1 ;else local v404=0;while true do if (v404==0) then v95[v97[2]]=v282;v89=v97[3];break;end end end end elseif (v98==(53 + 30)) then v95[v97[2]]=v97[399 -(115 + 281) ] -v95[v97[4]] ;else for v366=v97[2],v97[3] do v95[v366]=nil;end end elseif (v98<=88) then if (v98<=86) then if (v98>85) then local v284=0;local v285;local v286;local v287;while true do if (1==v284) then v287=v95[v285] + v286 ;v95[v285]=v287;v284=2;end if (v284==0) then v285=v97[2];v286=v95[v285 + 2 ];v284=1;end if (v284==2) then if (v286>0) then if (v287<=v95[v285 + 1 ]) then local v540=0;while true do if (v540==0) then v89=v97[3];v95[v285 + 3 ]=v287;break;end end end elseif (v287>=v95[v285 + 1 ]) then v89=v97[3];v95[v285 + 3 ]=v287;end break;end end else v89=v97[3];end elseif (v98==(202 -115)) then if  not v95[v97[2]] then v89=v89 + 1 + 0 ;else v89=v97[3];end else v95[v97[2]]= #v95[v97[3]];end elseif (v98<=90) then if (v98>(974 -(261 + 624))) then v95[v97[4 -2 ]]=v72[v97[10 -7 ]];else v95[v97[3 -1 ]]=v97[3];end elseif (v98>91) then local v294=0;local v295;while true do if (v294==0) then v295=v97[1082 -(1020 + 60) ];v95[v295]=v95[v295](v21(v95,v295 + 1 ,v90));break;end end else v95[v97[2]][v95[v97[3]]]=v97[4];end elseif (v98<=108) then if (v98<=100) then if (v98<=96) then if (v98<=94) then if (v98==93) then local v298=v86[v97[3]];local v299;local v300={};v299=v18({},{[v7("\141\61\58\72\126\81\182","\206\210\98\83\38\26\52")]=function(v368,v369) local v370=0;local v371;while true do if (v370==0) then v371=v300[v369];return v371[1][v371[2]];end end end,[v7("\121\103\25\34\227\69\72\92\18\63","\44\38\56\119\71\148")]=function(v372,v373,v374) local v375=0;local v376;while true do if (v375==0) then v376=v300[v373];v376[1][v376[2]]=v374;break;end end end});for v377=1424 -(630 + 793) ,v97[4] do local v378=0;local v379;while true do if (1==v378) then if (v379[1]==106) then v300[v377-1 ]={v95,v379[3]};else v300[v377-(4 -3) ]={v72,v379[3]};end v94[ #v94 + 1 ]=v300;break;end if (v378==0) then v89=v89 + 1 ;v379=v85[v89];v378=1;end end end v95[v97[2]]=v40(v298,v299,v73);else local v302=v97[2];local v303=v95[v302];local v304=v95[v302 + 2 ];if (v304>0) then if (v303>v95[v302 + 1 ]) then v89=v97[3];else v95[v302 + 2 + 1 ]=v303;end elseif (v303<v95[v302 + 1 ]) then v89=v97[3];else v95[v302 + (3 -0) ]=v303;end end elseif (v98==95) then if (v95[v97[2]]<=v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[2]]={};end elseif (v98<=98) then if (v98==(270 -173)) then if (v95[v97[2]]<=v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else v95[v97[6 -4 ]]=v40(v86[v97[3]],nil,v73);end elseif (v98>99) then v95[v97[2]]=v73[v97[3]];else v95[v97[2]]=v97[3] -v95[v97[4]] ;end elseif (v98<=104) then if (v98<=102) then if (v98==101) then for v380=v97[2],v97[3] do v95[v380]=nil;end else local v310=0;local v311;while true do if (v310==0) then v311=v97[2];do return v21(v95,v311,v90);end break;end end end elseif (v98>103) then v95[v97[287 -(134 + 151) ]][v95[v97[3]]]=v95[v97[4]];else do return;end end elseif (v98<=106) then if (v98>105) then v95[v97[2]]=v95[v97[1750 -(760 + 987) ]];else v95[v97[2]]=v97[3] + v95[v97[4]] ;end elseif (v98>107) then local v317=0;local v318;while true do if (0==v317) then v318=v97[2];v95[v318](v21(v95,v318 + 1 ,v90));break;end end elseif v95[v97[2]] then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=116) then if (v98<=112) then if (v98<=110) then if (v98>109) then v95[v97[2]]=v95[v97[3]]/v97[4] ;else local v320=v97[2];local v321=v97[4];local v322=v320 + (3 -1) ;local v323={v95[v320](v95[v320 + 1 ],v95[v322])};for v382=1,v321 do v95[v322 + v382 ]=v323[v382];end local v324=v323[1];if v324 then local v409=0;while true do if (v409==0) then v95[v322]=v324;v89=v97[3];break;end end else v89=v89 + 1 ;end end elseif (v98==111) then v95[v97[2]][v97[3]]=v97[4];else local v327=0;while true do if (v327==0) then v95[v97[2]]=v97[3]~=0 ;v89=v89 + (3 -2) ;break;end end end elseif (v98<=114) then if (v98==113) then v95[v97[2]]=v95[v97[3]] -v95[v97[4]] ;elseif (v95[v97[2]]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98==115) then v95[v97[2]][v97[3]]=v95[v97[4]];else v95[v97[2]][v97[3]]=v97[4];end elseif (v98<=120) then if (v98<=118) then if (v98==(2030 -(1789 + 124))) then if (v97[7 -5 ]==v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end else local v333=v97[2];do return v21(v95,v333,v333 + v97[1827 -(1195 + 629) ] );end end elseif (v98==119) then v95[v97[2]]=v95[v97[3]]%v97[5 -1 ] ;elseif (v95[v97[2]]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[3];end elseif (v98<=122) then if (v98>(362 -(187 + 54))) then if (v97[2]<v95[v97[4]]) then v89=v89 + 1 ;else v89=v97[783 -(162 + 618) ];end else v95[v97[2]]=v95[v97[3]][v97[770 -(745 + 21) ]];end elseif (v98==123) then v95[v97[2]]=v95[v97[2 + 1 ]] * v97[4] ;else v89=v97[3];end v89=v89 + (2 -1) ;end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
